#!/bin/bash

base=$(cd ${0%/*}/../..; pwd)

file=$1
report_file=$2
report_failed_file=$3
output_loc=$4
config=$5
trait_dir=$6
chr_dir=$7
snp_dir=$8

filename=$(basename $file)
name=$(echo $filename | cut -f 1 -d '.')
trait=$(echo "$name" | cut -d"-" -f3)

if [ -z $file ]; then
	echo "Need to provide the file"
	exit
fi

if [ -z $report_file ]; then
        echo "Need to provide the report file name"
        exit
fi

if [ -z $report_failed_file ]; then
        echo "Need to provide the failed file name"
        exit
fi

# delete output files
rm -f $base/snp_output*
rm -f $base/snp_error*
rm -f $base/chr_output*
rm -f $base/chr_error*
rm -f $base/trait_output*
rm -f $base/trait_error*

while read line; do
    jobtype=$(echo $line | cut -d":" -f1)
    chromosome=$(echo $line | cut -d":" -f2)

    if [ $jobtype == "snp" ]; then
        bp=$(echo $line | cut -d":" -f3)
        # replace with backup
        $base/bin/utils/rollback.sh $output_loc $snp_dir/$chromosome file_"$bp".h5
        # resubmit job
        $base/bin/load/submit_snp.sh $file $chromosome $bp $config $base/files/toload
    elif [ $jobtype == "chr" ]; then
        # replace with backup
        $base/bin/utils/rollback.sh $output_loc $chr_dir file_"$chromosome".h5
        # resubmit job
        $base/bin/load/submit_chr.sh $file $chromosome $config $base/files/toload
    elif [ $jobtype == "trait" ]; then
        # replace with backup
        $base/bin/utils/rollback.sh $output_loc $trait_dir file_"$trait".h5
        # resubmit job
        $base/bin/load/submit_trait.sh $file $config $base/files/toload
    fi
done < $report_failed_file

# clean up failed_file
> $report_failed_file
